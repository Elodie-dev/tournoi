{"version":3,"sources":["component/Nav.js","component/Home.js","component/Get.js","component/GetJoueur.js","component/Add.js","component/AddStade.js","component/Update.js","component/UpdateJoueur.js","component/Delete.js","component/DeleteJoueur.js","App.js","serviceWorker.js","index.js"],"names":["Nav","className","type","to","React","Component","Home","Get","componentDidMount","fetch","then","response","json","data","console","log","setState","stades","render","stade","state","map","i","key","nom_stade","adresse_stade","cp_stade","onClick","props","history","push","id_stade","cellSpacing","cellPadding","GetJoueur","joueurs","joueur","nom_joueur","prenom_joueur","date_naissance_joueur","numero","nom_poste","nom_equipe","id_joueur","Add","postes","equipes","fields","errors","this","formIsValid","match","e","preventDefault","handleValidation","method","headers","body","JSON","stringify","parseInt","Moment","format","id_poste","id_equipe","alert","field","target","value","poste","equipe","name","onSubmit","contactSubmit","bind","ref","size","placeholder","onChange","handleChange","style","color","refs","min","max","AddStade","ville_stade","pays_stade","Update","id","defaultValue","params","UpdateJoueur","Delete","handleDelete","confirmAlert","title","message","buttons","label","open","NotFound","App","exact","path","component","DeleteJoueur","Boolean","window","location","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.733b2811.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nclass Nav extends React.Component{\r\n    render(){\r\n    \r\n        return(\r\n            <div>\r\n                <h1>React - Express</h1>\r\n                <div className=\"nav\">\r\n                    <button type=\"button\">\r\n                        <Link className=\"button\" to=\"/\">Home</Link>\r\n                    </button>\r\n                    <button type=\"button\">\r\n                        <Link className=\"button\" to=\"/read\">Afficher Stade</Link>\r\n                    </button>\r\n                    <button type=\"button\">\r\n                        <Link className=\"button\" to=\"/read_joueur\">Afficher Joueur</Link>\r\n                    </button>\r\n                    <button type=\"button\">\r\n                        <Link className=\"button\" to=\"/create\">Ajouter Joueur</Link>\r\n                    </button>\r\n                    <button type=\"button\">\r\n                        <Link className=\"button\" to=\"/create_stade\">Ajouter un Stade</Link>\r\n                    </button>\r\n                </div>\r\n            </div>)\r\n    }\r\n}\r\n\r\n\r\nexport default Nav;","import React from 'react';\r\n\r\nclass Home extends React.Component{\r\n\r\n    render(){\r\n        return(\r\n            <div></div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\n\r\nclass Get extends React.Component{\r\n    constructor(){\r\n        super();\r\n        this.state={\r\n            stades:[]\r\n        }  \r\n    }\r\n\r\n    componentDidMount = () =>{\r\n        fetch(\"/read/allstadium\")\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .then((data) => {\r\n              console.log(data);\r\n              this.setState({stades : data});\r\n        })\r\n    }\r\n\r\n    render = () => {\r\n        let stade = this.state.stades.map((data,i) => { return <tr key={i}>\r\n            <td>{data.nom_stade}</td>\r\n            <td>{data.adresse_stade}</td>\r\n            <td>{data.cp_stade}</td>\r\n            <td><button type=\"button\" onClick={()=>this.props.history.push(`update/stade/${data.id_stade}`)}>Modifier</button></td>\r\n            <td><button type=\"button\" onClick={()=>this.props.history.push(`delete/stade/${data.id_stade}`)}>Supprimer</button></td></tr>});\r\n        return(\r\n           <table cellSpacing=\"2\" cellPadding=\"5\">\r\n               <thead>\r\n                   <tr>\r\n                       <th>Nom du Stade</th>\r\n                       <th>Adresse du Stade</th>\r\n                       <th>Code Postal</th>\r\n                       <th>Modifier</th>\r\n                       <th>Supprimer</th>\r\n                   </tr>\r\n               </thead>\r\n               <tbody>\r\n                   {stade}\r\n               </tbody>\r\n           </table>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Get;","import React from 'react';\r\n\r\nclass GetJoueur extends React.Component{\r\n    constructor(){\r\n        super();\r\n        this.state={\r\n            joueurs:[]\r\n        }    \r\n    }\r\n\r\n    componentDidMount = () =>{\r\n        fetch(\"/read/allplayers\")\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .then((data) => {\r\n              console.log(data);\r\n              this.setState({joueurs : data});\r\n        })\r\n    }\r\n\r\n    render = () => {\r\n    let joueur = this.state.joueurs.map((data,i) => { return <tr key={i}><td>{data.nom_joueur}</td><td>{data.prenom_joueur}</td><td>{data.date_naissance_joueur}</td><td>{data.numero}</td><td>{data.nom_poste}</td><td>{data.nom_equipe}</td><td><button type=\"button\" onClick={()=>this.props.history.push(`update/player/${data.id_joueur}`)}>Modifier</button></td><td><button type=\"button\" onClick={()=>this.props.history.push(`delete/player/${data.id_joueur}`)}>Supprimer</button></td></tr>});\r\n        return(\r\n            <table cellSpacing=\"2\" cellPadding=\"5\" className=\"joueur\">\r\n               <thead>\r\n                   <tr>\r\n                       <th>Nom</th>\r\n                       <th>Prénom</th>\r\n                       <th>Date de Naissance</th>\r\n                       <th>Numero</th>\r\n                       <th>Poste</th>\r\n                       <th>Equipe</th>\r\n                       <th>Modifier</th>\r\n                       <th>Supprimer</th>\r\n                   </tr>\r\n               </thead>\r\n               <tbody>\r\n                   {joueur}\r\n               </tbody>\r\n           </table>\r\n        )\r\n    }\r\n}\r\n\r\nexport default GetJoueur;","import React from 'react';\r\nimport Moment from 'moment';\r\n\r\nclass Add extends React.Component {\r\n    constructor(props){\r\n       super(props);\r\n  \r\n       this.state = {\r\n           fields: {},\r\n           errors: {},\r\n           postes:[],\r\n           equipes:[]\r\n       }\r\n    }\r\n\r\n    componentDidMount = () =>{\r\n        fetch(\"/read/allpostes\")\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .then((data) => {\r\n              console.log(data);\r\n              this.setState({postes : data});\r\n        })\r\n        fetch(\"/read/allequipes\")\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .then((data) => {\r\n              console.log(data);\r\n              this.setState({equipes : data});\r\n        })\r\n    }\r\n\r\n    handleValidation(){\r\n        let fields = this.state.fields;\r\n        let errors = {};\r\n        let formIsValid = true;\r\n\r\n        //Name\r\n        if(!fields[\"name\"]){\r\n           formIsValid = false;\r\n           errors[\"name\"] = \"Cannot be empty\";\r\n        }\r\n  \r\n        if(typeof fields[\"name\"] !== \"undefined\"){\r\n           if(!fields[\"name\"].match(/^[a-zA-Z]+$/)){\r\n              formIsValid = false;\r\n              errors[\"name\"] = \"Only letters\";\r\n           }        \r\n        }\r\n        //Firstname\r\n        if(!fields[\"firstname\"]){\r\n           formIsValid = false;\r\n           errors[\"firstname\"] = \"Cannot be empty\";\r\n        }\r\n  \r\n        if(typeof fields[\"firstname\"] !== \"undefined\"){\r\n           if(!fields[\"firstname\"].match(/^[a-zA-Z]+$/)){\r\n              formIsValid = false;\r\n              errors[\"firstname\"] = \"Only letters\";\r\n           }        \r\n        }\r\n        //number\r\n        if(!fields[\"number\"]){\r\n           formIsValid = false;\r\n           errors[\"number\"] = \"Cannot be empty\";\r\n        }\r\n  \r\n        if(typeof fields[\"number\"] !== \"undefined\"){\r\n           if(!fields[\"number\"].match(/^[0-9]+$/)){\r\n              formIsValid = false;\r\n              errors[\"number\"] = \"Only numbers\";\r\n           }        \r\n        }  \r\n\r\n       this.setState({errors: errors});\r\n       return formIsValid;\r\n   }\r\n    \r\n   contactSubmit(e){\r\n        e.preventDefault();\r\n\r\n        if(this.handleValidation()){\r\n            fetch(\"/create/newplayer\",\r\n        {method: 'POST', headers: {'content-type': 'application/json'},\r\n        body: JSON.stringify({nom_joueur: this.state.fields[\"name\"], prenom_joueur: this.state.fields[\"firstname\"], numero: parseInt(this.state.fields[\"number\"]), date_naissance_joueur: Moment(this.state.fields[\"date_naissance\"]).format('YYYY-MM-DD'), id_poste: parseInt(this.state.fields[\"id_poste\"]), id_equipe:parseInt(this.state.fields[\"id_equipe\"])})})\r\n        .then((response) => {\r\n            alert(`Le joueur ${this.state.fields[\"name\"]} ${this.state.fields[\"firstname\"]} a bien été créée`);\r\n            return response.json();\r\n            \r\n        })\r\n        .then((data) => {\r\n            console.log(data);\r\n        });\r\n        }else{\r\n           alert(\"Form has errors.\")\r\n        }\r\n  \r\n    }\r\n\r\n    handleChange(field, e){         \r\n        let fields = this.state.fields;\r\n        fields[field] = e.target.value;        \r\n        this.setState({fields});\r\n    }\r\n\r\n    render(){\r\n        let poste = this.state.postes.map((data,i)=>{return <option key={i} value={data.id_poste}>{data.nom_poste}</option>});\r\n        let equipe = this.state.equipes.map((data,i)=>{return <option key={i} value={data.id_equipe}>{data.nom_equipe}</option>});\r\n        return (\r\n            <div>           \r\n               <form name=\"contactform\" className=\"contactform\" onSubmit= {this.contactSubmit.bind(this)}>\r\n                    <div className=\"col-md-6\">\r\n                      <fieldset>\r\n                           <input ref=\"name\" type=\"text\" size=\"30\" placeholder=\"Nom\" onChange={this.handleChange.bind(this, \"name\")} value={this.state.fields[\"name\"]}/>\r\n                           <span style={{color: \"red\"}}>{this.state.errors[\"name\"]}</span>\r\n                            <br/>\r\n                            <input refs=\"firstname\" type=\"text\" size=\"30\" placeholder=\"Prénom\" onChange={this.handleChange.bind(this, \"firstname\")} value={this.state.fields[\"firstname\"]}/>\r\n                            <span style={{color: \"red\"}}>{this.state.errors[\"firstname\"]}</span>\r\n                            <br/>\r\n                            <input refs=\"number\" type=\"text\" size=\"30\" placeholder=\"Numéro\" onChange={this.handleChange.bind(this, \"number\")} value={this.state.fields[\"number\"]}/>\r\n                            <span style={{color: \"red\"}}>{this.state.errors[\"number\"]}</span>\r\n                            <br/>\r\n                            <input refs=\"date_naissance\" type=\"date\" size=\"30\" min=\"1980-01-01\" max=\"2003-12-31\" placeholder=\"Date de Naissance\" onChange={this.handleChange.bind(this, \"date_naissance\")} value={this.state.fields[\"date_naissance\"]}/>\r\n                            <span style={{color: \"red\"}}>{this.state.errors[\"date_naissance\"]}</span>\r\n                            <br/>\r\n                            <label>Poste\r\n                            <select name=\"id_poste\" refs=\"id_poste\" onChange={this.handleChange.bind(this, \"id_poste\")} value={this.state.fields[\"id_poste\"]}>\r\n                                <option></option>\r\n                                {poste}\r\n                            </select>\r\n                            </label><br/>\r\n                            <label>Equipe\r\n                            <select name=\"id_equipe\" refs=\"id_equipe\" onChange={this.handleChange.bind(this, \"id_equipe\")} value={this.state.fields[\"id_equipe\"]}>\r\n                                <option></option>\r\n                                {equipe}\r\n                            </select>\r\n                        </label>\r\n                         <br/>\r\n                        <input type=\"submit\" value=\"Ajouter nouveau Joueur\"/>\r\n                     </fieldset>\r\n                  </div>\r\n      \r\n              </form>\r\n            </div>\r\n      )\r\n    }\r\n}\r\n// class Add extends React.Component{\r\n//     constructor(props){\r\n//         super(props);\r\n//         this.state = {\r\n//             nom:'',\r\n//             prenom:'',\r\n//             numero:null,\r\n//             date_naissance:'',\r\n//             id_poste:'',\r\n//             id_equipe:'',\r\n//             postes:[],\r\n//             equipes:[]\r\n\r\n//         }\r\n//     }\r\n\r\n//     componentDidMount = () =>{\r\n//         fetch(\"/read/allpostes\")\r\n//         .then(response => {\r\n//             return response.json();\r\n//         })\r\n//         .then((data) => {\r\n//               console.log(data);\r\n//               this.setState({postes : data});\r\n//         })\r\n//         fetch(\"/read/allequipes\")\r\n//         .then(response => {\r\n//             return response.json();\r\n//         })\r\n//         .then((data) => {\r\n//               console.log(data);\r\n//               this.setState({equipes : data});\r\n//         })\r\n//     }\r\n//     handleInputChange = (event) => {\r\n//         const target = event.target;\r\n//         const value = target.value;\r\n//         const name = target.name;\r\n    \r\n//         this.setState({\r\n//           [name]: value\r\n//         });\r\n//     }\r\n\r\n//     handleSubmit = () => {\r\n//         fetch(\"/create/newplayer\",\r\n//         {method: 'POST', headers: {'content-type': 'application/json'},\r\n//         body: JSON.stringify({nom_joueur: this.state.nom, prenom_joueur: this.state.prenom, numero: parseInt(this.state.numero), date_naissance_joueur: Moment(this.state.date_naissance).format('YYYY-MM-DD'), id_poste: parseInt(this.state.id_poste), id_equipe:parseInt(this.state.id_equipe)})})\r\n//         .then((response) => {\r\n//             alert(`Le joueur ${this.state.nom} ${this.state.prenom} a bien été créée`);\r\n//             return response.json();\r\n            \r\n//         })\r\n//         .then((data) => {\r\n//             console.log(data);\r\n//         });\r\n//     }\r\n\r\n   \r\n\r\n//     render(){\r\n//         let poste = this.state.postes.map((data,i)=>{return <option key={i} value={data.id_poste}>{data.nom_poste}</option>});\r\n//         let equipe = this.state.equipes.map((data,i)=>{return <option key={i} value={data.id_equipe}>{data.nom_equipe}</option>});\r\n//         return (\r\n//             <div> \r\n//                 <h2>Ajouter un joueur</h2>\r\n//                 <input type=\"text\" id=\"nom_joueur\" name=\"nom\" placeholder=\"nom du joueur\" onChange={this.handleInputChange}/><br/>\r\n//                 <input type=\"text\" id=\"prenom_joueur\" name=\"prenom\" placeholder=\"prenom du joueur\" onChange={this.handleInputChange}/><br/>\r\n//                 <input type=\"number\" id=\"numero_joueur\" name=\"numero\" placeholder=\"numero du joueur\" onChange={this.handleInputChange}/><br/>\r\n//                 <input type=\"date\" id=\"date_naissance\" name=\"date_naissance\" placeholder=\"date de naissance du joueur\" onChange={this.handleInputChange}/><br/>\r\n//                 <label>Poste\r\n//                     <select name=\"id_poste\" onChange={this.handleInputChange}>\r\n//                         <option></option>\r\n//                         {poste}\r\n//                     </select>\r\n//                 </label><br/>\r\n//                 <label>Equipe\r\n//                     <select name=\"id_equipe\" onChange={this.handleInputChange}>\r\n//                         <option></option>\r\n//                         {equipe}\r\n//                     </select>\r\n//                 </label><br/>\r\n                \r\n//                 <button type=\"button\" onClick={this.handleSubmit}>Ajouter un joueur</button>\r\n                \r\n            \r\n//             </div>\r\n//         )\r\n//     }\r\n// }\r\n\r\nexport default Add;","import React from 'react';\r\n\r\nclass AddStade extends React.Component {\r\n    constructor(props){\r\n       super(props);\r\n  \r\n       this.state = {\r\n           fields: {},\r\n           errors: {}\r\n       }\r\n    }\r\n\r\n    handleValidation(){\r\n        let fields = this.state.fields;\r\n        let errors = {};\r\n        let formIsValid = true;\r\n\r\n        //Name\r\n        if(!fields[\"name\"]){\r\n           formIsValid = false;\r\n           errors[\"name\"] = \"Cannot be empty\";\r\n        }\r\n  \r\n        if(typeof fields[\"name\"] !== \"undefined\"){\r\n           if(!fields[\"name\"].match(/^[a-zA-Z]+$/)){\r\n              formIsValid = false;\r\n              errors[\"name\"] = \"Only letters\";\r\n           }        \r\n        }\r\n        //adress\r\n        if(!fields[\"adress\"]){\r\n           formIsValid = false;\r\n           errors[\"adress\"] = \"Cannot be empty\";\r\n        }\r\n  \r\n        if(typeof fields[\"adress\"] !== \"undefined\"){\r\n           if(!fields[\"adress\"].match(/^[a-zA-Z0-9]+$/)){\r\n              formIsValid = false;\r\n              errors[\"adress\"] = \"Only alphanumeric\";\r\n           }        \r\n        }\r\n        //cp\r\n        if(!fields[\"cp\"]){\r\n           formIsValid = false;\r\n           errors[\"cp\"] = \"Cannot be empty\";\r\n        }\r\n  \r\n        if(typeof fields[\"cp\"] !== \"undefined\"){\r\n           if(!fields[\"cp\"].match(/^[0-9]+$/)){\r\n              formIsValid = false;\r\n              errors[\"cp\"] = \"Only numbers\";\r\n           }        \r\n        }\r\n        //Ville\r\n        if(!fields[\"ville\"]){\r\n           formIsValid = false;\r\n           errors[\"ville\"] = \"Cannot be empty\";\r\n        }\r\n  \r\n        if(typeof fields[\"ville\"] !== \"undefined\"){\r\n           if(!fields[\"ville\"].match(/^[a-zA-Z]+$/)){\r\n              formIsValid = false;\r\n              errors[\"ville\"] = \"Only letters\";\r\n           }        \r\n        }\r\n        //Pays\r\n        if(!fields[\"pays\"]){\r\n           formIsValid = false;\r\n           errors[\"pays\"] = \"Cannot be empty\";\r\n        }\r\n  \r\n        if(typeof fields[\"pays\"] !== \"undefined\"){\r\n           if(!fields[\"pays\"].match(/^[a-zA-Z]+$/)){\r\n              formIsValid = false;\r\n              errors[\"pays\"] = \"Only letters\";\r\n           }        \r\n        }\r\n\r\n       this.setState({errors: errors});\r\n       return formIsValid;\r\n   }\r\n    \r\n   contactSubmit(e){\r\n        e.preventDefault();\r\n\r\n        if(this.handleValidation()){\r\n            fetch(\"/create/newstade\",\r\n        {method: 'POST', headers: {'content-type': 'application/json'},\r\n        body: JSON.stringify({nom_stade: this.state.fields[\"name\"], adresse_stade: this.state.fields[\"adress\"], cp_stade: parseInt(this.state.fields[\"cp\"]), ville_stade: this.state.fields[\"ville\"], pays_stade:this.state.fields[\"pays\"]})})   \r\n        .then((response) => {\r\n            alert(`Le stade ${this.state.fields[\"name\"]} a bien été créée`);\r\n            this.props.history.push('/read')\r\n            return response.json();\r\n            \r\n        })\r\n        .then((data) => {\r\n            console.log(data);\r\n        });\r\n        }else{\r\n           alert(\"Form has errors.\")\r\n        }\r\n  \r\n    }\r\n\r\n    handleChange(field, e){         \r\n        let fields = this.state.fields;\r\n        fields[field] = e.target.value;        \r\n        this.setState({fields});\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div>           \r\n               <form name=\"contactform\" className=\"contactform\" onSubmit= {this.contactSubmit.bind(this)}>\r\n                    <div className=\"col-md-6\">\r\n                      <fieldset>\r\n                           <input ref=\"name\" type=\"text\" size=\"30\" placeholder=\"Nom du Stade\" onChange={this.handleChange.bind(this, \"name\")} value={this.state.fields[\"name\"]}/>\r\n                           <span style={{color: \"red\"}}>{this.state.errors[\"name\"]}</span>\r\n                          <br/>\r\n                         <input refs=\"adress\" type=\"text\" size=\"30\" placeholder=\"Adresse\" onChange={this.handleChange.bind(this, \"adress\")} value={this.state.fields[\"adress\"]}/>\r\n                         <span style={{color: \"red\"}}>{this.state.errors[\"adress\"]}</span>\r\n                         <br/>\r\n                         <input refs=\"cp\" type=\"text\" size=\"30\" placeholder=\"Code Postal\" onChange={this.handleChange.bind(this, \"cp\")} value={this.state.fields[\"cp\"]}/>\r\n                         <span style={{color: \"red\"}}>{this.state.errors[\"cp\"]}</span>\r\n                         <br/>\r\n                         <input refs=\"ville\" type=\"text\" size=\"30\" placeholder=\"Ville\" onChange={this.handleChange.bind(this, \"ville\")} value={this.state.fields[\"ville\"]}/>\r\n                         <span style={{color: \"red\"}}>{this.state.errors[\"ville\"]}</span>\r\n                         <br/>\r\n                         <input refs=\"pays\" type=\"text\" size=\"30\" placeholder=\"Pays\" onChange={this.handleChange.bind(this, \"pays\")} value={this.state.fields[\"pays\"]}/>\r\n                         <span style={{color: \"red\"}}>{this.state.errors[\"pays\"]}</span>\r\n                         <br/>\r\n                        <input type=\"submit\" value=\"Ajouter nouveau Stade\"/>\r\n                     </fieldset>\r\n                  </div>\r\n      \r\n              </form>\r\n            </div>\r\n      )\r\n    }\r\n}\r\n\r\nexport default AddStade;","import React from 'react';\r\n\r\nclass Update extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            id: props.match.params.id,\r\n            fields: {},\r\n            errors: {},\r\n            stade: {}\r\n        }\r\n    }\r\n    handleValidation(){\r\n        let fields = this.state.fields;\r\n        let errors = {};\r\n        let formIsValid = true;\r\n\r\n        //Name\r\n        if(!fields[\"name\"]){\r\n           formIsValid = false;\r\n           errors[\"name\"] = \"Cannot be empty\";\r\n        }\r\n  \r\n        if(typeof fields[\"name\"] !== \"undefined\"){\r\n           if(!fields[\"name\"].match(/^[a-zA-Z]+$/)){\r\n              formIsValid = false;\r\n              errors[\"name\"] = \"Only letters\";\r\n           }        \r\n         }\r\n        //adress\r\n        if(!fields[\"adress\"]){\r\n           formIsValid = false;\r\n           errors[\"adress\"] = \"Cannot be empty\";\r\n        }\r\n  \r\n        if(typeof fields[\"adress\"] !== \"undefined\"){\r\n           if(!fields[\"adress\"].match(/^[a-zA-Z0-9]+$/)){\r\n              formIsValid = false;\r\n              errors[\"adress\"] = \"Only alphanumeric\";\r\n           }        \r\n        }\r\n        //cp\r\n        if(!fields[\"cp\"]){\r\n           formIsValid = false;\r\n           errors[\"cp\"] = \"Cannot be empty\";\r\n        }\r\n  \r\n        if(typeof fields[\"cp\"] !== \"undefined\"){\r\n           if(!fields[\"cp\"].match(/^[0-9]+$/)){\r\n              formIsValid = false;\r\n              errors[\"cp\"] = \"Only numbers\";\r\n           }        \r\n        }\r\n        //Ville\r\n        if(!fields[\"ville\"]){\r\n           formIsValid = false;\r\n           errors[\"ville\"] = \"Cannot be empty\";\r\n        }\r\n  \r\n        if(typeof fields[\"ville\"] !== \"undefined\"){\r\n           if(!fields[\"ville\"].match(/^[a-zA-Z]+$/)){\r\n              formIsValid = false;\r\n              errors[\"ville\"] = \"Only letters\";\r\n           }        \r\n        }\r\n        //Pays\r\n        if(!fields[\"pays\"]){\r\n           formIsValid = false;\r\n           errors[\"pays\"] = \"Cannot be empty\";\r\n        }\r\n  \r\n        if(typeof fields[\"pays\"] !== \"undefined\"){\r\n           if(!fields[\"pays\"].match(/^[a-zA-Z]+$/)){\r\n              formIsValid = false;\r\n              errors[\"pays\"] = \"Only letters\";\r\n           }        \r\n         }\r\n       this.setState({errors: errors});\r\n       return formIsValid;\r\n   }\r\n    \r\n   contactSubmit(e){\r\n        e.preventDefault();\r\n\r\n        if(this.handleValidation()){\r\n            fetch(`/update/stade/${this.state.id}`,\r\n        {method: 'PUT', headers: {'content-type': 'application/json'},\r\n        body: JSON.stringify({nom_stade: this.state.fields[\"name\"], adresse_stade: this.state.fields[\"adress\"], cp_stade: parseInt(this.state.fields[\"cp\"]), ville_stade: this.state.fields[\"ville\"], pays_stade:this.state.fields[\"pays\"]})})   \r\n        .then((response) => {\r\n            alert(`Le stade ${this.state.fields[\"name\"]} a bien été modifié`);\r\n            this.props.history.push('/read');\r\n            return response.json();\r\n            \r\n        })\r\n        .then((data) => {\r\n            console.log(data);\r\n        });\r\n        }else{\r\n           alert(\"Form has errors.\")\r\n        }\r\n  \r\n    }\r\n\r\n    handleChange(field, e){         \r\n        let fields = this.state.fields;\r\n        fields[field] = e.target.value;        \r\n        this.setState({fields});\r\n    }\r\n\r\n    componentDidMount = () =>{\r\n      fetch(`/read/allstadium/${this.state.id}`)\r\n      .then(response => {\r\n          return response.json();\r\n      })\r\n      .then((data) => {\r\n            console.log(data);\r\n            this.setState({stade : data[0]});\r\n      })\r\n  }\r\n    \r\n    render = () => {\r\n        return (\r\n            <div>    \r\n               <form name=\"contactform\" className=\"contactform\" onSubmit= {this.contactSubmit.bind(this)}>\r\n                    <div className=\"col-md-6\">\r\n                      <fieldset>\r\n                           <input refs=\"name\" type=\"text\" size=\"30\" placeholder=\"Nom du Stade\" onChange={this.handleChange.bind(this, \"name\")} defaultValue={this.state.stade.nom_stade}/>\r\n                           <span style={{color: \"red\"}}>{this.state.errors[\"name\"]}</span>\r\n                          <br/>\r\n                         <input refs=\"adress\" type=\"text\" size=\"30\" placeholder=\"Adresse\" onChange={this.handleChange.bind(this, \"adress\")} defaultValue={this.state.stade.adresse_stade}/>\r\n                         <span style={{color: \"red\"}}>{this.state.errors[\"adress\"]}</span>\r\n                         <br/>\r\n                         <input refs=\"cp\" type=\"text\" size=\"30\" placeholder=\"Code Postal\" onChange={this.handleChange.bind(this, \"cp\")} defaultValue={this.state.stade.cp_stade}/>\r\n                         <span style={{color: \"red\"}}>{this.state.errors[\"cp\"]}</span>\r\n                         <br/>\r\n                         <input refs=\"ville\" type=\"text\" size=\"30\" placeholder=\"Ville\" onChange={this.handleChange.bind(this, \"ville\")} defaultValue={this.state.stade.ville_stade}/>\r\n                         <span style={{color: \"red\"}}>{this.state.errors[\"ville\"]}</span>\r\n                         <br/>\r\n                         <input refs=\"pays\" type=\"text\" size=\"30\" placeholder=\"Pays\" onChange={this.handleChange.bind(this, \"pays\")} defaultValue={this.state.stade.pays_stade}/>\r\n                         <span style={{color: \"red\"}}>{this.state.errors[\"pays\"]}</span>\r\n                         <br/>\r\n                        <input type=\"submit\" value=\"Modifier le Stade\"/>\r\n                     </fieldset>\r\n                  </div>\r\n      \r\n              </form>\r\n            </div>\r\n      )\r\n    }\r\n}\r\n\r\nexport default Update;","import React from 'react';\r\nimport Moment from 'moment';\r\n\r\nclass UpdateJoueur extends React.Component{\r\n   constructor(props){\r\n      super(props);\r\n \r\n      this.state = {\r\n          fields: {},\r\n          errors: {},\r\n          postes:[],\r\n          equipes:[],\r\n          id: props.match.params.id\r\n      }\r\n   }\r\n\r\n   componentDidMount = () =>{\r\n       fetch(\"/read/allpostes\")\r\n       .then(response => {\r\n           return response.json();\r\n       })\r\n       .then((data) => {\r\n             console.log(data);\r\n             this.setState({postes : data});\r\n       })\r\n       fetch(\"/read/allequipes\")\r\n       .then(response => {\r\n           return response.json();\r\n       })\r\n       .then((data) => {\r\n             console.log(data);\r\n             this.setState({equipes : data});\r\n       })\r\n   }\r\n\r\n   handleValidation(){\r\n       let fields = this.state.fields;\r\n       let errors = {};\r\n       let formIsValid = true;\r\n\r\n       //Name\r\n       if(!fields[\"name\"]){\r\n          formIsValid = false;\r\n          errors[\"name\"] = \"Cannot be empty\";\r\n       }\r\n \r\n       if(typeof fields[\"name\"] !== \"undefined\"){\r\n          if(!fields[\"name\"].match(/^[a-zA-Z]+$/)){\r\n             formIsValid = false;\r\n             errors[\"name\"] = \"Only letters\";\r\n          }        \r\n       }\r\n       //Firstname\r\n       if(!fields[\"firstname\"]){\r\n          formIsValid = false;\r\n          errors[\"firstname\"] = \"Cannot be empty\";\r\n       }\r\n \r\n       if(typeof fields[\"firstname\"] !== \"undefined\"){\r\n          if(!fields[\"firstname\"].match(/^[a-zA-Z]+$/)){\r\n             formIsValid = false;\r\n             errors[\"firstname\"] = \"Only letters\";\r\n          }        \r\n       }\r\n       //number\r\n       if(!fields[\"number\"]){\r\n          formIsValid = false;\r\n          errors[\"number\"] = \"Cannot be empty\";\r\n       }\r\n \r\n       if(typeof fields[\"number\"] !== \"undefined\"){\r\n          if(!fields[\"number\"].match(/^[0-9]+$/)){\r\n             formIsValid = false;\r\n             errors[\"number\"] = \"Only numbers\";\r\n          }        \r\n       }  \r\n\r\n      this.setState({errors: errors});\r\n      return formIsValid;\r\n  }\r\n    \r\n   contactSubmit(e){\r\n        e.preventDefault();\r\n\r\n        if(this.handleValidation()){\r\n            fetch(`/update/player/${this.state.id}`,\r\n        {method: 'PUT', headers: {'content-type': 'application/json'},\r\n        body: JSON.stringify({nom_joueur: this.state.fields[\"name\"], prenom_joueur: this.state.fields[\"firstname\"], numero: parseInt(this.state.fields[\"number\"]), date_naissance_joueur: Moment(this.state.fields[\"date_naissance\"]).format('YYYY-MM-DD'), id_poste: parseInt(this.state.fields[\"id_poste\"]), id_equipe:parseInt(this.state.fields[\"id_equipe\"])})})\r\n        .then((response) => {\r\n            alert(`Le joueur ${this.state.fields[\"name\"]} ${this.state.fields[\"firstname\"]} a bien été modifié`);\r\n            this.props.history.push('/read_joueur');\r\n            return response.json();\r\n            \r\n        })\r\n        .then((data) => {\r\n            console.log(data);\r\n        });\r\n        }else{\r\n           alert(\"Form has errors.\")\r\n        }\r\n  \r\n    }\r\n\r\n    handleChange(field, e){         \r\n      let fields = this.state.fields;\r\n      fields[field] = e.target.value;        \r\n      this.setState({fields});\r\n  }\r\n\r\n  render(){\r\n      let poste = this.state.postes.map((data,i)=>{return <option key={i} value={data.id_poste}>{data.nom_poste}</option>});\r\n      let equipe = this.state.equipes.map((data,i)=>{return <option key={i} value={data.id_equipe}>{data.nom_equipe}</option>});\r\n      return (\r\n          <div>           \r\n             <form name=\"contactform\" className=\"contactform\" onSubmit= {this.contactSubmit.bind(this)}>\r\n                  <div className=\"col-md-6\">\r\n                    <fieldset>\r\n                         <input ref=\"name\" type=\"text\" size=\"30\" placeholder=\"Nom\" onChange={this.handleChange.bind(this, \"name\")} value={this.state.fields[\"name\"]}/>\r\n                         <span style={{color: \"red\"}}>{this.state.errors[\"name\"]}</span>\r\n                          <br/>\r\n                          <input refs=\"firstname\" type=\"text\" size=\"30\" placeholder=\"Prénom\" onChange={this.handleChange.bind(this, \"firstname\")} value={this.state.fields[\"firstname\"]}/>\r\n                          <span style={{color: \"red\"}}>{this.state.errors[\"firstname\"]}</span>\r\n                          <br/>\r\n                          <input refs=\"number\" type=\"text\" size=\"30\" placeholder=\"Numéro\" onChange={this.handleChange.bind(this, \"number\")} value={this.state.fields[\"number\"]}/>\r\n                          <span style={{color: \"red\"}}>{this.state.errors[\"number\"]}</span>\r\n                          <br/>\r\n                          <input refs=\"date_naissance\" type=\"date\" size=\"30\" min=\"1980-01-01\" max=\"2003-12-31\" placeholder=\"Date de Naissance\" onChange={this.handleChange.bind(this, \"date_naissance\")} value={this.state.fields[\"date_naissance\"]}/>\r\n                          <span style={{color: \"red\"}}>{this.state.errors[\"date_naissance\"]}</span>\r\n                          <br/>\r\n                          <label>Poste\r\n                          <select name=\"id_poste\" refs=\"id_poste\" onChange={this.handleChange.bind(this, \"id_poste\")} value={this.state.fields[\"id_poste\"]}>\r\n                              <option></option>\r\n                              {poste}\r\n                          </select>\r\n                          </label><br/>\r\n                          <label>Equipe\r\n                          <select name=\"id_equipe\" refs=\"id_equipe\" onChange={this.handleChange.bind(this, \"id_equipe\")} value={this.state.fields[\"id_equipe\"]}>\r\n                              <option></option>\r\n                              {equipe}\r\n                          </select>\r\n                      </label>\r\n                       <br/>\r\n                      <input type=\"submit\" value=\"Modifier le Joueur\"/>\r\n                   </fieldset>\r\n                </div>\r\n    \r\n            </form>\r\n          </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default UpdateJoueur;","import React from 'react';\r\nimport { confirmAlert } from 'react-confirm-alert';\r\n\r\nclass Delete extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            id: props.match.params.id,\r\n            stades:[],\r\n            open: true\r\n\r\n        }\r\n    }\r\n    handleDelete = () =>{\r\n        confirmAlert({\r\n            title: 'Confirmation de la suppression',\r\n            message: 'Etes vous sur de vouloir supprimer le stade ?',\r\n            buttons: [\r\n              {\r\n                label: 'Oui',\r\n                onClick: () => {fetch(`/delete/stade/${this.state.id}`,\r\n                {method: 'DELETE'})\r\n                .then((response) => {\r\n                    this.props.history.push('/read');\r\n                    return response.json();\r\n                    \r\n                })\r\n                .then((data) => {\r\n                    console.log(data);\r\n                    \r\n                })}\r\n              },\r\n              {\r\n                label: 'Non',\r\n                onClick: () => {this.props.history.push('/read')}\r\n              }\r\n            ]\r\n          });\r\n    }\r\n\r\n    render = () => {\r\n        {this.handleDelete()}\r\n        return(\r\n            <div>\r\n                <h2>Stade</h2>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Delete;","import React from 'react';\r\nimport { confirmAlert } from 'react-confirm-alert';\r\n\r\nclass Delete extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            id: props.match.params.id,\r\n            joueurs:[],\r\n            open: true\r\n\r\n        }\r\n    }\r\n    handleDelete = () =>{\r\n        confirmAlert({\r\n            title: 'Confirmation de la suppression',\r\n            message: 'Etes vous sur de vouloir supprimer le joueur ?',\r\n            buttons: [\r\n              {\r\n                label: 'Oui',\r\n                onClick: () => {fetch(`/delete/player/${this.state.id}`,\r\n                {method: 'DELETE'})\r\n                .then((response) => {\r\n                    this.props.history.push('/read');\r\n                    return response.json();\r\n                    \r\n                })\r\n                .then((data) => {\r\n                    console.log(data);\r\n                    \r\n                })}\r\n              },\r\n              {\r\n                label: 'Non',\r\n                onClick: () => {this.props.history.push('/read')}\r\n              }\r\n            ]\r\n          });\r\n    }\r\n\r\n    render = () => {\r\n        return(\r\n            <div>\r\n                <h2>Joueur</h2>\r\n                {this.handleDelete}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Delete;","import React from 'react';\nimport './App.css';\nimport { Route, BrowserRouter as Router, Switch } from 'react-router-dom';\nimport Nav from './component/Nav';\nimport Home from './component/Home';\nimport Get from './component/Get';\nimport GetJoueur from './component/GetJoueur';\nimport Add from './component/Add';\nimport AddStade from './component/AddStade';\nimport Update from './component/Update';\nimport UpdateJoueur from './component/UpdateJoueur';\nimport Delete from './component/Delete';\nimport DeleteJoueur from './component/DeleteJoueur';\n\n\n\nfunction NotFound(){\n  return(<div>\n    <p>Error 404 Page not found</p>\n      </div>)\n}\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Nav />\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route exact path=\"/read\" component={Get} />\n          <Route exact path=\"/read_joueur\" component={GetJoueur} />\n          <Route path=\"/create\" component={Add} />\n          <Route path=\"/create_stade\" component={AddStade} />\n          <Route path=\"/update/stade/:id\" component={Update} />\n          <Route path=\"/update/player/:id\" component={UpdateJoueur} />\n          <Route path=\"/delete/stade/:id\" component={Delete} />\n          <Route path=\"/delete/player/:id\" component={DeleteJoueur} />\n          <Route component={NotFound} />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}